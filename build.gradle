
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'ru.vyarus.quality'
apply plugin: 'io.freefair.lombok'
apply plugin: 'application'
apply plugin: 'idea'


group 'org.example'
//version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()

}

//tomcatRun {
//    httpPort = 8080
//    contextPath = "/springsecurityapp"
//}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    ext {
        springBootGradleVersion = '2.1.1.RELEASE'
        liquibaseGradlePluginVersion = '2.0.1'
        lombokVersion = '5.3.0'
        qualityVersion = '4.1.0'
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootGradleVersion"
        classpath "org.liquibase:liquibase-gradle-plugin:$liquibaseGradlePluginVersion"
        classpath "io.freefair.gradle:lombok-plugin:${lombokVersion}"
        classpath "ru.vyarus:gradle-quality-plugin:$qualityVersion"
    }

}

ext {
    springMvcVersion = '5.3.0'
    springSecurityVersion = '5.4.1'
    springSecurityConfigVersion = '5.4.1'
    springJpaVersion = '2.4.0'
    hibernateValidatorVersion = '6.1.6.Final'
    hibernateEntityManagerVersion = '5.4.23.Final'
    mysqlConnectorVersion = '8.0.22'
    dbcpVersion = '1.4'
    jstlVersion = '1.2'
    logbackVersion = '1.1.11'

//    springBootStarterSecurity = '2.1.3.RELEASE'
//    tomcatServerVersion = '8.5.20'
    liquibaseVersion = '3.6.2'
    //для тестов
    junitVersion = '4.12'
    persistenceApiVersion = '1.0'
//    tomcatServerVersion = '2.4.0'

//    mybatisVersion = '3.5.4'
//    mybatisSpringVersion = '1.3.2'

}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}
dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '2.4.0'
//    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
//    compile "org.springframework.boot:spring-boot-starter-web"
//    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.4.0'
//    compile "org.springframework.boot:spring-boot-starter-tomcat:${tomcatServerVersion}"
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
//    compile "org.springframework:spring-webmvc:${springMvcVersion}"
    compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-config:${springSecurityConfigVersion}"
    compile "org.springframework.data:spring-data-jpa:${springJpaVersion}"
    compile "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"
    compile "org.hibernate:hibernate-entitymanager:${hibernateEntityManagerVersion}"
    compile "mysql:mysql-connector-java:${mysqlConnectorVersion}"
    compile "commons-dbcp:commons-dbcp:${dbcpVersion}"
    compile "javax.servlet:jstl:${jstlVersion}"
    compile "javax.persistence:persistence-api:${persistenceApiVersion}"

    testCompile "ch.qos.logback:logback-classic:${logbackVersion}"


    compile "org.liquibase:liquibase-core:$liquibaseVersion"

    testCompile "junit:junit:$junitVersion"


}


quality {
    autoRegistration = true
    htmlReports = false

    checkstyleVersion = '8.16'
    htmlReports = false

    checkstyle = true
    pmd = false
    cpd = false
    spotbugs = true
    codenarc = false

    /**
     * Javac lint options to show compiler warnings, not visible by default.
     * Applies to all CompileJava tasks.
     * Options will be added as -Xlint:option
     * Full list of options: http://docs.oracle.com/javase/8/docs/technotes/tools/windows/javac.html#BHCJCABJ
     */
    lintOptions = [] //['deprecation', 'unchecked']
}

def checkstyleConfigDir = project.rootDir.path + "/checkstyle"
afterEvaluate {
    checkstyle {
        configFile = file("$checkstyleConfigDir/checkstyle.xml")
    }
}